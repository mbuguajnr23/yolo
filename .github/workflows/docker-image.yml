name: Docker Image CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Log in to DockerHub using access token
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

      - name: Get commit count
        id: commit_count
        run: echo "count=$(git rev-list --count HEAD)" >> $GITHUB_ENV

      - name: Build and push client image
        run: |
          docker buildx build \
            --build-arg BUILDKIT_INLINE_CACHE=1 \
            --cache-from=type=local,src=/tmp/.buildx-cache \
            --cache-to=type=local,dest=/tmp/.buildx-cache-new \
            --file client/Dockerfile \
            --tag ${{ secrets.DOCKER_USERNAME }}/yolo-client:latest \
            --tag ${{ secrets.DOCKER_USERNAME }}/yolo-client:${{ env.count }} \
            --push .

      - name: Build and push backend image
        run: |
          docker buildx build \
            --build-arg BUILDKIT_INLINE_CACHE=1 \
            --cache-from=type=local,src=/tmp/.buildx-cache \
            --cache-to=type=local,dest=/tmp/.buildx-cache-new \
            --file backend/Dockerfile \
            --tag ${{ secrets.DOCKER_USERNAME }}/yolo-backend:latest \
            --tag ${{ secrets.DOCKER_USERNAME }}/yolo-backend:${{ env.count }} \
            --push .

      - name: Save cache
        if: always()
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache-new
          key: ${{ runner.os }}-buildx-${{ github.sha }}

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/$(curl -s https://api.github.com/repos/docker/compose/releases/latest | grep -oP '(?<=tag_name": ")[^"]*')/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose

      - name: Verify services with Docker Compose
        run: |
          docker-compose up --build -d
          sleep 30
          docker-compose ps
          docker-compose down
